import Head from 'next/head'
import Image from 'next/image'
import Pokedex from 'pokedex-promise-v2'
import { useState, useEffect } from 'react'
import PokeCard from '../components/main/PokeCard';
import LoadingTop from '../components/main/LoadingTop'

const Poke = new Pokedex()

export default function Home() {
  const [displayPokemon, setdisplayPokemon] = useState([]);
  const [pokemonDetails, setPokemonDetails] = useState([]);
  const [paginationParam, setpaginationParam] = useState({
    limit: 20,
    offset: 0
  });
  const [fetchingPage, setfetchingPage] = useState(0);
  const [fetchingDetail, setFetchingDetail] = useState(0);

  const doNext = () => {
    setpaginationParam(prevState => ({
      ...prevState,
      offset: prevState.offset + prevState.limit
    }))
  }

  const doPrev = () => {
    setpaginationParam(prevState => ({
      ...prevState,
      offset: prevState.offset - prevState.limit
    }))
  }

  useEffect(() => {
    Poke.getPokedexList().then(generations => {
      console.log({generations})
    })
  }, []);

  useEffect(() => {
    if(! fetchingPage) {
      setfetchingPage(1)
      Poke.getPokemonsList({...paginationParam}).then((pokemons) => {
        setdisplayPokemon(pokemons)
        // console.log({pokemons})
      }).then(() => {
        setfetchingPage(0)
      })
    }
  }, [paginationParam]);

  useEffect(() => {
    if(! fetchingDetail) {
      setFetchingDetail(1)
      let nameOnly = displayPokemon.results ?? []
      nameOnly = nameOnly.map(poke => poke.name)
      Poke.getPokemonByName(nameOnly).then((detailPokes) => {
        setPokemonDetails(detailPokes)
        console.log({detailPokes})
      }).then(() => {
        setFetchingDetail(0)
      })
    }
  }, [displayPokemon])

  return (
    <div>
      <Head>
        <title>Pokedex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='h-screen text-gray-50'>
        <LoadingTop hidden={![fetchingPage, fetchingDetail].includes(1)} />
        <div className='container mx-auto'>
          <h3 className='text-3xl text-center mt-10'>Pokedex</h3>
          <div className="my-4">{ JSON.stringify(paginationParam) }</div>
          <div className='mt-5 grid grid-cols-6 gap-4'>
            {
              displayPokemon?.previous && <PokeCard onClick={doPrev} label='< Previous'></PokeCard>
            }
            {
              pokemonDetails.map((poke, idx) =>
                (
                  <PokeCard key={idx} poke={poke} label={null}></PokeCard>
                )
              )
            }
            {
              displayPokemon?.next && <PokeCard label='Next >' onClick={doNext}></PokeCard>
            }
          </div>
        </div>

      </main>
    </div>
  )
}
